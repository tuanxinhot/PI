#!/bin/bash
#version=1.0.0

# Initialize vars
field_count=1

# set the name of our wireless adapter (run the 'iwconfig' command yourself and get the adapter name,
# which will be something like 'wlan0' or 'wlan1'
WLAN_NIC="wlan0"

# List all of our Wi-Fi channels to lookup from the frequency we gather in the output of the "iw" scan command
declare -A CHANNELS=(
['2412']='1'
['2417']='2'
['2422']='3'
['2427']='4'
['2432']='5'
['2437']='6'
['2442']='7'
['2447']='8'
['2452']='9'
['2457']='10'
['2462']='11'
['2467']='12'
['2472']='13'
['2484']='14'
['5035']='7'
['5040']='8'
['5045']='9'
['5055']='11'
['5060']='12'
['5080']='16'
['5160']='32'
['5170']='34'
['5180']='36'
['5190']='38'
['5200']='40'
['5210']='42'
['5220']='44'
['5230']='46'
['5240']='48'
['5250']='50'
['5260']='52'
['5270']='54'
['5280']='56'
['5290']='58'
['5300']='60'
['5310']='62'
['5320']='64'
['5340']='68'
['5480']='96'
['5500']='100'
['5510']='102'
['5520']='104'
['5530']='106'
['5540']='108'
['5550']='110'
['5560']='112'
['5570']='114'
['5580']='116'
['5590']='118'
['5600']='120'
['5610']='122'
['5620']='124'
['5630']='126'
['5640']='128'
['5660']='132'
['5670']='134'
['5680']='136'
['5690']='138'
['5700']='140'
['5710']='142'
['5720']='144'
['5745']='149'
['5755']='151'
['5765']='153'
['5775']='155'
['5785']='157'
['5795']='159'
['5805']='161'
['5815']='163'
['5825']='165'
['5835']='167'
['5845']='169'
['5855']='171'
['5865']='173'
['5875']='175'
['5885']='177'
['5910']='182'
['5915']='183'
['5920']='184'
['5935']='187'
['5940']='188'
['5945']='189'
['5960']='192'
['5980']='196'
)

# Check if there is any ssid parameter
if [ "$1" != "" ]; then
  if [ "$1" == "--" ]; then
    if [ -f /boot/wpa_supplicant.conf ]; then
      my_ssid=$(cat /boot/wpa_supplicant.conf | tr -d '[:blank:]"' | grep ^ssid= | cut -c6- | awk NR==1 | tr -d '\r\n')
    else
      echo "/boot/wpa_supplicant not found"
      exit 1;
    fi
  else
    my_ssid="$1"
  fi
fi

if [ "$2" != "" ]; then
  my_band=$(echo "$2" | tr '[:upper:]' '[:lower:]')
fi

list_ssid_info_row() {
  if [ "$my_ssid" == "" ] || [ "$my_ssid" == "$ssid" ]; then
    #format channel number to fit display nicely
    channel=$(printf '%3s' "${CHANNELS[$freq]}")
    quality="$((110-$(echo $rssi | cut -c2-3)))/70"
    if [ "$mac" == "$bssid" ]; then
      echo " * $bssid    $rssi    $quality    $channel    $freq    $ssid"
    else
      echo "   $bssid    $rssi    $quality    $channel    $freq    $ssid"
    fi
  fi
}

# Get self connected SSID's mac address
mac=$(/sbin/iwconfig $WLAN_NIC | grep "Access Point:" | grep -o '..\:..\:..\:..\:..\:..' |  awk '{ print tolower($0) }')

# Set IFS to ensure grep output split only at line end on for statement
IFS='
'
# capture grep output in "iw" scan command in to array
grep_output=(`/sbin/iw dev $WLAN_NIC scan | grep -o 'BSS ..\:..\:..\:..\:..\:..\|SSID: .*\|signal\: .* \|freq\: .*'`)

# print headers
if [ "$3" == "" ]; then
  echo "================================================================================"
  echo "   BSSID                RSSI      Qual      CH    Freq    SSID"
  echo "                        (dBm)                     (Mhz)"
  echo "================================================================================"
fi

# Read through grep output from "iw" scan command
for line in "${grep_output[@]}"; do
  # set IFS to space & tab
  IFS=" 	"

  # first field should be BSS
  if [[ $line =~ BSS ]]; then
    bss_array=( $line )
    bssid=${bss_array[1]}
  fi

  # second field should be freq:
  if [[ $line =~ "freq:" ]]; then
    freq_array=( $line )
    freq=${freq_array[1]}
  fi

  # third field should be signal:
  if [[ $line =~ "signal:" ]]; then
    signal_array=( $line )
    rssi=${signal_array[1]}
  fi

  # fourth field should be SSID
  if [[ $line =~ "SSID" ]]; then
    ssid_array=( $line )
    # get rid of first array element so that we can print whole array, leaving just SSID name which may have spaces
    unset ssid_array[0]
    ssid=${ssid_array[@]}
  fi

  # Every 4th line we have all the input we need to write out the data
  if [ $field_count -eq 4 ]; then
    if [ "$my_band" == "5ghz" ]; then
      if [[ "$freq" == 5* ]]; then
        list_ssid_info_row
      fi
    elif [ "$my_band" == "2.4ghz" ]; then
      if [[ "$freq" == 2* ]]; then
        list_ssid_info_row
      fi
    else
      list_ssid_info_row
    fi

    field_count=0

    # clear all arrays and variable for the next while loop run
    ssid_array=()
    signal_array=()
    freq_array=()
    bss_array=()
    grep_output=()

    bssid=''
    ssid=''
    freq=''
    rssi=''
    channel=''
  fi

  ((field_count++))
done | sort -k2

# print footers
if [ "$3" == "" ]; then
  echo "================================================================================"
  echo
fi